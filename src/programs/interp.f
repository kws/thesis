      program loadxReadMe
C=============================================================================
C  F77-compliant program generated by readme2fx1.0, on 1998-Jun-12
C=============================================================================
*  This code was generated from the ReadMe file documenting a catalogue
*  according to the "Standard for Documentation of Astronomical Catalogues"
*  currently in use by the Astronomical Data Centers (CDS, ADC, A&amp;A)
*  (see full documentation at URL <A HREF="http://vizier.u-strasbg.fr/doc/catstd.htx">http://vizier.u-strasbg.fr/doc/catstd.htx</A>)
*  Please report problems or questions to   <A HREF="mailto:question@simbad.u-strasbg.fr">question@simbad.u-strasbg.fr</A>
C=============================================================================

      implicit none
*  Unspecified or NULL values, generally corresponding to blank columns,
*  are assigned one of the following special values:
*     xrNULLx    for unknown or NULL floating-point values
*     xiNULLx    for unknown or NULL   integer      values
      real*4     xrNULLx
      integer*4  xiNULLx
      parameter  (xrNULLx=-1.e37)     	! NULL real number
      parameter  (xiNULLx=-2147483647)	! NULL int  number

      integer itab,tamsNB
      character*10 fname
      character*80 path
      logical printed
      real    tamst,tamsl

C=============================================================================
Cat. J/A+AS/96/269    Stellar Models from 0.8 to 120 Msolar         (Schaller+, 1992)
*================================================================================
*New grids of stellar models from 0.8 to 120 Msolar at Z=0.020 and Z=0.001
*     SCHALLER G., SCHAERER D., MEYNET G., MAEDER A.
*    &lt;Astron. Astrophys. Suppl. Ser. 96, 269 (1992)&gt;
*    =1992A&amp;AS...96..269S      (SIMBAD/NED RefCode)
C=============================================================================

C  Internal variables

      integer*4 xix

c - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

C  Declarations for 'table1'	! M=120, Z=0.020, with overshooting,
C                                        standard mass loss

      integer*4 xnrx
      parameter (xnrx=51)	! Number of records
      character*254 xarx   	! Full-size record

      integer*4     NB          ! number of selected point

      real*8        X           ! H    surface abundance (mass fraction)
      real*8        Y           ! He   surface abundance (mass fraction)
      real*8        C12         ! 12C  surface abundance (mass fraction)
      real*8        C13         ! 13C  surface abundance (mass fraction)
      real*8        N14         ! 14N  surface abundance (mass fraction)
      real*8        O16         ! 16O  surface abundance (mass fraction)
      real*8        O17         ! 17O  surface abundance (mass fraction)
      real*8        O18         ! 18O  surface abundance (mass fraction)
      real*8        Ne20        ! 20Ne surface abundance (mass fraction)
      real*8        Ne22        ! 22Ne surface abundance (mass fraction)
      real*4        QCC         ! core mass fraction
      real*4        logTu       ! (K) ? log(uncorrected Teff)  (WR stars only)
      real*8        logMdot     ! (Sun/yr) log(mass loss rate)
      real*4        logxrhoxc   ! (g/cm3) log(central density)
      real*4        logTc       ! (K) log(central temperature)
      real*8        Xc          ! H    central abundance (mass fraction)
      real*8        Yc          ! He   central abundance (mass fraction)
      real*8        C12c        ! 12C  central abundance (mass fraction)
      real*8        C13c        ! 13C  central abundance (mass fraction)
      real*8        N14c        ! 14N  central abundance (mass fraction)
      real*8        O16c        ! 16O  central abundance (mass fraction)
      real*8        O17c        ! 17O  central abundance (mass fraction)
      real*8        O18c        ! 18O  central abundance (mass fraction)
      real*8        Ne20c       ! 20Ne central abundance (mass fraction)
      real*8        Ne22c       ! 22Ne central abundance (mass fraction)

CKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWSKWS
      integer nmod,npt
      parameter (nmod=8)
      parameter (npt=11)

      real        Mass(nmod,npt)        ! (Sun) actual mass in solar masses
      real        logL(nmod,npt)        ! (Sun) log(luminosity) in solar units
      real        logTe(nmod,npt)       ! (K) log(effective temperature)
      real        age(nmod,npt)         ! (yr) age
      real        masses(nmod),cHage(nmod)
      real        modL(npt), modTe(npt), modM(npt), modA(npt)
      real        modCH
      real        inpTe,inpL,getParam
      real        dL,dT,dist,ms, bestmass
      real        bestage,bestfrac


      data masses/9.0,12.0,15.0,20.0,25.0,40.0,60.0,85.0/

C=============================================================================

C  Loading file 'table1'	! M=120, Z=0.020, with overshooting,
C                                        standard mass loss

C  Format for file interpretation

    1 format(
     +  I2,1X,E14.7,F8.4,1X,F5.3,1X,F5.3,1X,F8.6,1X,F8.6,1X,F8.6,1X,
     +  F8.6,1X,F8.6,1X,F8.6,1X,F8.6,1X,F8.6,1X,F8.6,1X,F8.6,3X,F6.4,
     +  3X,F5.3,1X,F7.3,1X,F5.3,1X,F5.3,1X,F8.6,1X,F8.6,1X,F8.6,1X,
     +  F8.6,1X,F8.6,1X,F8.6,1X,F8.6,1X,F8.6,1X,F8.6,1X,F8.6)

C  Read command line parameters
      CALL GETARG(1,path)
      CALL GETARG(2,xarx)
      READ(xarx,*,ERR=10,END=10) inpTe
      CALL GETARG(3,xarx)
      READ(xarx,*,ERR=10,END=10) inpL

      goto 20

 10   write (*,*) "Blah! Didn't understand that..."
      write (*,*) "Usage: interp model_path Teff(kK) log(L/Lsun)"
      stop

 20   continue
      inpTe = log(inpTe*1000.)/log(10.0)
      write (*,*) "logTeff   = ",inpTe
      write (*,*) "logL      = ",inpL


C  Read in and write out tables for diagrams

      xix=index(path,' ')
      path(xix:xix)='/'
      do itab = 1, nmod
        xix=index(path,' ')-1
        write(fname,'("table",i1)') 10-itab
        open(unit=1,file=path(1:xix)//fname(1:6), status='old')
        write (fname,"(i2,'msol.asc')") int(masses(itab))
        if (masses(itab).lt.10.0) fname(1:1)='0'
        open(unit=2,file=fname, status='unknown')
        do xix=1,51
          read(1,'(A254)')xarx
          read(xarx,1)
     +    NB,age(itab,1),Mass(itab,1),logL(itab,1),logTe(itab,1),
     +    X,Y,C12,C13,N14,O16,O17,O18,Ne20,Ne22,
     +    QCC,logTu,logMdot,logxrhoxc,logTc,Xc,Yc,C12c,C13c,N14c,O16c,
     +    O17c,O18c,Ne20c,Ne22c
C I've just added 16 below because it `feels' right.... what is it supposed to be?
          if (Y.gt.0.5) goto 100
          write(2,"(3F7.3)") logTe(itab,1),logL(itab,1),
     +         Y/(4.0 * X + Y)
C + (1.-X-Y)*16.)
        end do
 100    continue
        close(1)
        close(2)
      end do

C  Read in all tables in memory

      do itab = 1, nmod
        write(fname,'("table",i1)') 10-itab
        xix=index(path,' ')-1
        open(unit=1,file=path(1:xix)//fname(1:6), status='old')
        do xix=1,npt
          read(1,'(A254)')xarx
          read(xarx,1)
     +    NB,age(itab,xix),Mass(itab,xix),logL(itab,xix),
     +    logTe(itab,xix),
     +    X,Y,C12,C13,N14,O16,O17,O18,Ne20,Ne22,
     +    QCC,logTu,logMdot,logxrhoxc,logTc,Xc,Yc,C12c,C13c,N14c,O16c,
     +    O17c,O18c,Ne20c,Ne22c
        end do
        do xix=npt+1,13
           read(1,'(A254)')xarx
           read(xarx,1) NB,cHage(itab)
           if (NB.eq.13) goto 110
        enddo
 110    continue
C        write (*,'(2I3,1X,F4.0,1X,E10.4)') itab,NB,
C     +       masses(itab),cHage(itab)
        close(1)
        close(2)
      end do

      open(unit=21,file='zams.asc',status='unknown')
      open(unit=22,file='tams.asc',status='unknown')
C Output ZAMS and TAMS
      do itab = 9, 85
        call getmod(logL,logTe,Mass,age,cHage,masses,real(itab),
     +        modL,modTe,modM,modA,modCH)
        write (21,*) modTe(1),modL(1)
        write (22,*) modTe(npt),modL(npt)
      enddo
      close(21)
      close(22)

      dist = 9E9
      do ms = 9.0, 85.0, 0.1
        call getmod(logL,logTe,Mass,age,cHage,masses,ms,
     +        modL,modTe,modM,modA,modCH)
C       --get distance from model to point
        dL = inpL - getParam(modTe,modL,inpTe)
        dT = inpTe - getParam(modL,modTe,inpL)
        dT = sqrt(dL**2 + dT**2)
        if (dt.le.dist) then
           dist=dt
           bestmass=ms
        endif
      enddo

      write (*,*) "M_0  = ",bestmass
      call getmod(logL,logTe,Mass,age,cHage,masses,bestmass,
     +     modL,modTe,modM,modA,modCH)
      dL = getParam(modTe,modM,inpTe)
      write (*,*) "M_e  = ",dL
      bestage = getParam(modTe,modA,inpTe)
      bestfrac = bestage/modCH
      write (*,'(" Ages  = ",2E10.3,1X,F4.2)') bestage,modCH,bestfrac



      open(unit=21,file="bestfit.cmd",status='unknown')
      open(unit=22,file="allmods.cmd",status='unknown')
      open(unit=23,file="isochrone.asc",status='unknown')
      open(unit=24,file="isofrac.asc",status='unknown')
      write (21,"('sch 1.0')")
      write (21,"('dot ',2(F7.5,X)' 2 20')") inpTe,inpL
      do xix=10,85
         call getmod(logL,logTe,Mass,age,cHage,masses,real(xix),
     +        modL,modTe,modM,modA,modCH)
         if (xix.eq.bestmass) then
            write (21,"('move ',2(F7.5,X))") modTe(1),modL(1)
            do itab = 2,npt
               write (21,"('draw ',2(F7.5,X))") modTe(itab),modL(itab)
            enddo
         endif
         write (22,"('move ',2(F7.5,X))") modTe(1),modL(1)
         do itab = 2,npt
            write (22,"('draw ',2(F7.5,X))") modTe(itab),modL(itab)
         enddo

C Work out isochrones and isofracs :)
         if (bestage.lt.modCH) then
            inpTe = getParam(modA,modTe,bestage)
            inpL  = getParam(modA,modL,bestage)
            write (23,'(2(F7.5,X))') inpTe,inpL
         endif
         dl = bestfrac * modCH
         inpTe = getParam(modA,modTe,dl)
         inpL  = getParam(modA,modL,dl)
         write (24,'(2(F7.5,X))') inpTe,inpL
      enddo
      close(21)
      close(22)
      close(23)
      close(24)


C=============================================================================
      stop
      end


      SUBROUTINE getmod(logL,logTe,Mass,age,cHage,masses,m,
     +     modL,modTe,modM,modA,modCH)

      implicit none

      integer nmod,npt
      parameter (nmod=8)
      parameter (npt=11)

      real logL(nmod,npt),logTe(nmod,npt),Mass(nmod,npt)
      real age(nmod,npt),masses(nmod),cHage(nmod)
      real m,modL(npt),modTe(npt),modM(npt),modA(npt)
      real arrL(nmod),arrT(nmod),arrM(nmod),arrA(nmod),modCH
      real y2(nmod)

      integer i,i1,i2


      do i1 = 1,npt
        do i2  = 1,nmod
          arrL(i2)=logL(i2,i1)
          arrT(i2)=logTe(i2,i1)
          arrM(i2)=Mass(i2,i1)
          arrA(i2)=age(i2,i1)
        end do
        call spline(masses,arrL,nmod,0,0,y2)
        call splint(masses,arrL,y2,nmod,m,modL(i1))
        call spline(masses,arrT,nmod,0,0,y2)
        call splint(masses,arrT,y2,nmod,m,modTe(i1))
        call spline(masses,arrM,nmod,0,0,y2)
        call splint(masses,arrM,y2,nmod,m,modM(i1))
        call spline(masses,arrA,nmod,0,0,y2)
        call splint(masses,arrA,y2,nmod,m,modA(i1))
      end do

      call spline(masses,cHage,nmod,0,0,y2)
      call splint(masses,cHage,y2,nmod,m,modCH)          

      end


      FUNCTION getParam(mod1,mod2,par1)
C This function takes the model x and y and interpolates for a value of x
      implicit none

      integer nmod,npt
      parameter (nmod=8)
      parameter (npt=11)

      real getParam
      real mod1(npt),mod2(npt),par1
      real new1(npt),new2(npt)
      real y2(npt)
      integer i

      do i=1,npt
        new1(i) = mod1(i)
        new2(i) = mod2(i)
      enddo

C     Make sure the arrays are sorted
      call sort2(npt,new1,new2)

C     Interpolate
      call spline(new1,new2,npt,0,0,y2)
      call splint(new1,new2,y2,npt,par1,getParam)


      end

